# .github/workflows/python-package.yml
name: Python Package CI and Publish

on:
  push:
    branches: ["main"] # Run tests on pushes to main
  pull_request:
    branches: ["main"] # Run tests on PRs to main
  release:
    types: [published] # Run publish job only when a release is published on GitHub

permissions: read-all # Default read permissions for most jobs

jobs:
  test: # Keep your existing test job
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Lint with flake8 (Optional)
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest

  publish:
    # Run this job only when a release is published, and only if tests passed (optional)
    needs: test # Optional: ensure tests pass before publishing
    runs-on: ubuntu-latest
    # Grant permission for the job to get an OIDC token
    permissions:
      id-token: write # Required for trusted publishing
      contents: read # Needed to check out the repository

    # Optional: Define an environment name if you configured one on PyPI
    # environment: pypi

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # Choose one consistent Python version for building/publishing

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No API token needed! The action automatically uses OIDC.
